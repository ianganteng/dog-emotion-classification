# -*- coding: utf-8 -*-
"""dog_emotion_deployment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19msf7aIGxgRyke7ARuSN13hr-7e9vWYd
"""

import os
import gdown
import tensorflow as tf
import numpy as np
from PIL import Image
import gradio as gr
from tensorflow.keras.applications.resnet50 import preprocess_input


MODEL_URL = "https://drive.google.com/uc?id=1EpVaVKH65aZCi5upHpMSf7plmj9lELgt" 
MODEL_PATH = "dog_emotion_prediction_final.keras"
CLASS_NAMES = ["Angry", "Happy", "Sad", "Neutral"]


if not os.path.exists(MODEL_PATH):
    gdown.download(MODEL_URL, MODEL_PATH, quiet=False)

# Load model
model = tf.keras.models.load_model(MODEL_PATH)

# === PREPROCESSING ===
def preprocess(image: Image.Image):
    image = image.resize((224, 224))
    img_array = np.array(image)
    img_array = preprocess_input(img_array)
    return np.expand_dims(img_array, axis=0)

# === PREDICTION FUNCTION ===
def predict_emotion_with_confidence(image: Image.Image):
    input_tensor = preprocess(image)
    preds = model.predict(input_tensor)[0]
    raw_confidences_for_label = {CLASS_NAMES[i]: float(preds[i]) for i in range(len(CLASS_NAMES))}
    return raw_confidences_for_label

# === GRADIO UI ===
iface = gr.Interface(
    fn=predict_emotion_with_confidence,
    inputs=gr.Image(type="pil", label="Upload Picture"),
    outputs=gr.Label(num_top_classes=len(CLASS_NAMES)),
    title="üê∂ Dog Emotion Predictor",
    description="Upload a picture of your dog and this AI will predict its emotion! ‚ù§Ô∏è",
)

iface.launch()
